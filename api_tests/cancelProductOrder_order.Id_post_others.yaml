# ********RoostGPT********

# Test generated by RoostGPT for test artillerysequence using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /cancelProductOrder/{order.Id}_post for http method type POST in artillery framework
# RoostTestHash=cddbe4a76c
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payloads:
    - path: "/cancelProductOrder_order.Id_post_others.csv"
      fields:
        - "order.Id"
        - "associatedDocument"
        - "subscriberId"
      skipHeader: true
      delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Non-Success API Responses"
    flow:

      - log: "Testing POST request with invalid body payload"
        post:
          url: "/cancelProductOrder/{{ order.Id }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            order:
              associatedDocument: "{{ associatedDocument }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 1

      - log: "Testing POST request with unauthorized token"
        post:
          url: "/cancelProductOrder/{{ order.Id }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer invalid_token"
          json:
            order:
              associatedDocument: "{{ associatedDocument }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
        think: 1

      - log: "Testing POST request with non-existent URL"
        post:
          url: "/nonExistentUrl/{{ order.Id }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            order:
              associatedDocument: "{{ associatedDocument }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 404
        think: 1

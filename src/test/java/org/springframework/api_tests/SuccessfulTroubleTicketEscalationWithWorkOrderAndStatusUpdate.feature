# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=1e25d70373
# ROOST_METHOD_SIG_HASH=894a44e205
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Trouble Ticket Escalation with Work Order and Status Update',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Successful Trouble Ticket Escalation with Work Order and Status Update',
#     steps: 'Given an existing trouble ticket with ID "TT001"\n' +
#       'And the trouble ticket is in "Open" status\n' +
#       'When the trouble ticket is escalated\n' +
#       'And a work order is created for the escalated trouble ticket\n' +
#       'And the trouble ticket status is updated to "In Progress"\n' +
#       'Then the trouble ticket should be escalated\n' +
#       'And a work order should be created for the escalated trouble ticket\n' +
#       'And the trouble ticket status should be updated to "In Progress"',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Trouble Ticket Escalation with Work Order and Status Update

  Background:
    * def TROUBLETICKET_V2_4957C987EF_URL = karate.properties['TROUBLETICKET_V2_4957C987EF_URL'] || karate.get('TROUBLETICKET_V2_4957C987EF_URL', 'http://localhost:4010')

  Scenario: Initial Retrieval of Trouble Ticket
    * url TROUBLETICKET_V2_4957C987EF_URL
    And path '/troubleTicket/TT001'
    When method get
    Then status 200
    And match response contains { id: 'TT001', status: 'Open' }

  Scenario: Escalate Trouble Ticket and Create Work Order
    * url TROUBLETICKET_V2_4957C987EF_URL
    And path '/troubleTicket/TT001'
    And request { status: 'In Progress' }
    When method patch
    Then status 201
    And match response.status == 'In Progress'

  Scenario: Verify Trouble Ticket Status Update
    * url TROUBLETICKET_V2_4957C987EF_URL
    And path '/troubleTicket/TT001'
    When method get
    Then status 200
    And match response.status == 'In Progress'

# ********RoostGPT********

# Test generated by RoostGPT for test fflive using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /listener/productOrderCreateEvent_post for http method type POST 
# RoostTestHash=9b45f7ab6a
# 
# 

# ********RoostGPT********
Feature: Product Order Create Event By Client

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken

  Scenario Outline: Verify Product Order Create Event with valid input
    Given path '/listener/productOrderCreateEvent'
    And request <body>
    When method post
    Then status 204
    And match response == '#null'

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario Outline: Verify Product Order Create Event with invalid input
    Given path '/listener/productOrderCreateEvent'
    And request <body>
    When method post
    Then status 400

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario: Unauthorized access to Product Order Create Event
    Given path '/listener/productOrderCreateEvent'
    And request read('valid-input-1.json')
    And header Authorization = 'Bearer invalidtoken'
    When method post
    Then status 401

  Scenario: Server error during Product Order Create Event
    Given path '/listener/productOrderCreateEvent'
    And request read('valid-input-1.json')
    And header Authorization = 'Bearer ' + authToken
    And simulate 'serverError'
    When method post
    Then status 500

  Scenario: Timeout error during Product Order Create Event
    Given path '/listener/productOrderCreateEvent'
    And request read('valid-input-1.json')
    And header Authorization = 'Bearer ' + authToken
    And simulate 'timeout'
    When method post
    Then status 504

# ********RoostGPT********

# Test generated by RoostGPT for test APIs-Fulfillment using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /listener/productOrderCreateEvent_post for http method type POST 
# RoostTestHash=9b45f7ab6a
# 
# 

# ********RoostGPT********
Feature: Test Product Order Create Event By Client API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Test POST request with valid input for product order create event
    Given path '/listener/productOrderCreateEvent'
    And header Authorization = 'Bearer ' + authToken
    And request 
    """
    <body>
    """
    When method post
    Then status 204
    And match response == '#null'

    Examples:
      | body                                                                                                               |
      | { "notification": { "date": "2021-06-05T20:23:29-03:00", "customer": { "subscriberId": "1234567890" }, "order": { "id": "20230315000001", "correlationOrder": "10", "associatedDocument": "VTT001", "issue": { "code": { "code": 7001 }, "description": "Pendência cliente" } } } } |

  Scenario Outline: Test POST request with invalid input for product order create event
    Given path '/listener/productOrderCreateEvent'
    And header Authorization = 'Bearer ' + authToken
    And request 
    """
    <body>
    """
    When method post
    Then status 400

    Examples:
      | body                                                                                                               |
      | { "notification": { "date": "invalid-date", "customer": { "subscriberId": "1234567890" }, "order": { "id": "20230315000001", "correlationOrder": "10", "associatedDocument": "VTT001", "issue": { "code": { "code": 7001 }, "description": "Pendência cliente" } } } } |

  Scenario: Test POST request without authorization
    Given path '/listener/productOrderCreateEvent'
    And request 
    """
    { "notification": { "date": "2021-06-05T20:23:29-03:00", "customer": { "subscriberId": "1234567890" }, "order": { "id": "20230315000001", "correlationOrder": "10", "associatedDocument": "VTT001", "issue": { "code": { "code": 7001 }, "description": "Pendência cliente" } } } }
    """
    When method post
    Then status 401

  Scenario: Test POST request server error
    Given path '/listener/productOrderCreateEvent'
    And header Authorization = 'Bearer ' + authToken
    And request 
    """
    { "notification": { "date": "2021-06-05T20:23:29-03:00", "customer": { "subscriberId": "1234567890" }, "order": { "id": "20230315000001", "correlationOrder": "10", "associatedDocument": "VTT001", "issue": { "code": { "code": 7001 }, "description": "Pendência cliente" } } } }
    """
    When method post
    Then status 500

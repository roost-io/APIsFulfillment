# ********RoostGPT********

# Test generated by RoostGPT for test fflive using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /listener/productOrderCreateEvent_post for http method type POST 
# RoostTestHash=9b45f7ab6a
# 
# 

# ********RoostGPT********
Feature: Product Order Create Event By Client

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Verify successful product order creation event
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    And header Authorization = 'Bearer ' + authToken
    When method post
    Then status 204

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario Outline: Verify unauthorized access to product order creation event
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 401

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario Outline: Verify bad request for product order creation event with invalid data
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    And header Authorization = 'Bearer ' + authToken
    When method post
    Then status 400

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario Outline: Verify server error during product order creation event
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    And header Authorization = 'Bearer ' + authToken
    When method post
    Then status 500

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

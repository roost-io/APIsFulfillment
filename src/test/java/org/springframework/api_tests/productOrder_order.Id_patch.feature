# ********RoostGPT********

# Test generated by RoostGPT for test fflive using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /productOrder/{order.Id}_patch for http method type PATCH 
# RoostTestHash=baabcd7d73
# 
# 

# ********RoostGPT********
Feature: Patch Product Order By Id

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken

  Scenario Outline: Update product order with valid inputs
    Given path '<order_Id>'
    And request <requestBody>
    When method patch
    Then status 200
    And match response == <expectedResponse>

    Examples:
      | read('productOrder_order.Id_patch.csv') |

  Scenario: Attempt to update product order with invalid authorization
    Given path '20230315000001'
    And request { "order": { "correlationOrder": "10", "associatedDocument": "VTT001", "type": "Bloqueio", "infraType": "FTTH" } }
    And header Authorization = 'Bearer invalid_token'
    When method patch
    Then status 401
    And match response == { "type": "E", "message": "Unauthorized", "code": "401" }

  Scenario: Update product order with invalid request body
    Given path '20230315000001'
    And request """{ "order": { "correlationOrder": "", "associatedDocument": "VTT001", "type": "Bloqueio", "infraType": "FTTH" }}""" # Missing correlationOrder
    When method patch
    Then status 400
    And match response == { "type": "E", "message": "Bad Request", "code": "400" }

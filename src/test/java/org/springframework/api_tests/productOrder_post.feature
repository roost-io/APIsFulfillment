# ********RoostGPT********

# Test generated by RoostGPT for test fflive using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=13e6a9adf7
# 
# 

# ********RoostGPT********
Feature: Product Order Management System

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken

  Scenario Outline: Create a new order with valid inputs
    Given path '/productOrder'
    And request <requestBody>
    When method post
    Then status 201
    And match response == <expectedResponse>

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Create a new order with invalid inputs
    Given path '/productOrder'
    And request <requestBody>
    When method post
    Then status <expectedStatus>
    And match response == <expectedResponse>

    Examples:
      | read('productOrder_post.csv') |

  Scenario: Unauthorized access attempt
    Given path '/productOrder'
    And request read('examples/valid_request.json')
    And header Authorization = 'Bearer invalidToken'
    When method post
    Then status 401
    And match response == read('responses/401_unauthorized.json')

  Scenario: System unavailable
    Given path '/productOrder'
    And request read('examples/valid_request.json')
    When method post
    Then status 503
    And match response == read('responses/503_service_unavailable.json')

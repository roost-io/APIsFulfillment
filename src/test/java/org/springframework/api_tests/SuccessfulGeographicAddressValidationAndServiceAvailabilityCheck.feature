# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=26bd09ffd8
# ROOST_METHOD_SIG_HASH=15f5719eaf
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Geographic Address Validation and Service Availability Check',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Successful Geographic Address Validation and Service Availability Check',
#     steps: 'Given the user has an address with ID "ADD001"\n' +
#       'When the user validates the address using the Geographic Address Management API\n' +
#       'And retrieves the address complements\n' +
#       'And checks the service availability for the address\n' +
#       'Then the address should be validated successfully\n' +
#       'And the address complements should be retrieved\n' +
#       'And the service availability check should return the available services for the address',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Geographic Address Validation and Service Availability Check

  Background:
    * def GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL = karate.properties['GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL'] || karate.get('GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL', 'http://localhost:4010')

  Scenario: Successful Geographic Address Validation
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/geographicAddress/ADD001'
    When method get
    Then status 200
    And match response == { control: '#object', addresses: '#object' }

  Scenario: Successful Service Availability Check
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/addressComplements/ADD001'
    When method get
    Then status 200
    And match response == { control: '#object', complementList: '#notnull' }

  Scenario: Geographic Address Validation with Invalid ID
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/geographicAddress/INVALID001'
    When method get
    Then status 404
    And match response == { type: 'string(enum: S,T,E)', message: 'string', code: 'string' }

  Scenario: Service Availability Check with Invalid ID
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/addressComplements/INVALID001'
    When method get
    Then status 404
    And match response == { type: 'string(enum: S,T,E)', message: 'string', code: 'string' }

  Scenario: Geographic Address Validation Handling Server Errors
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/geographicAddress/ADD001'
    When method get
    Then status 500
    And match response == { type: 'string(enum: S,T,E)', message: 'string', code: 'string' }

  Scenario: Service Availability Check Handling Server Errors
    * url GEOGRAPHICADDRESSMANAGEMENT_V1_E8356B219B_URL
    And path '/addressComplements/ADD001'
    When method get
    Then status 503
    And match response == { type: 'string(enum: S,T,E)', message: 'string', code: 'string' }

# ********RoostGPT********

# Test generated by RoostGPT for test vtal-product-order using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /listener/cancelProductOrderCreateEvent_post for http method type POST 
# RoostTestHash=410c81a448
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order Create Event By Client

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Successful cancellation of product order create event
    Given path '/listener/cancelProductOrderCreateEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "date": "2023-05-29T10:30:00Z",
          "customer": {
            "subscriberId": "123456789"
          },
          "order": {
            "id": "20230315000001",
            "correlationOrder": "ORD123",
            "associatedDocument": "VTT001",
            "issue": {
              "code": 7001,
              "description": "PendÃªncia Cancelamento por Duplicidade",
              "type": "CLIENTE",
              "observation": "Order cancelled due to duplication",
              "updateDate": "2023-05-29T11:00:00Z",
              "action": "fechar",
              "task": "Cancel Order",
              "fieldActivity": "False",
              "reason": "Duplicate order"
            }
          },
          "type": "CANCELAMENTO",
          "code": "2",
          "description": "Ordem cancelada",
          "lostEquipment": "False",
          "resource": {
            "gponAccess": "GPON_001",
            "devices": {
              "device": [
                {
                  "category": "ONT",
                  "type": "Optical Network Terminal",
                  "description": "ONT device",
                  "state": "ACTIVE",
                  "usageState": "IN_USE",
                  "startOperatingDate": "2023-05-29T10:00:00Z",
                  "resourceCharacteristic": [
                    {
                      "name": "SerialNumber",
                      "value": "SN123456"
                    }
                  ]
                }
              ]
            },
            "fiberPath": {
              "items": {
                "item": [
                  {
                    "name": "FiberSegment",
                    "value": "SEG001"
                  }
                ]
              }
            }
          }
        }
      }
      """
    When method POST
    Then status 204
    And match responseHeaders['Content-Type'][0] == 'application/json'

  Scenario: Unauthorized request
    Given path '/listener/cancelProductOrderCreateEvent'
    And request
      """
      {
        "notification": {
          "date": "2023-05-29T10:30:00Z",
          "customer": {
            "subscriberId": "123456789"
          },
          "order": {
            "id": "20230315000001",
            "correlationOrder": "ORD123",
            "associatedDocument": "VTT001"
          }
        }
      }
      """
    When method POST
    Then status 401

  Scenario: Bad request
    Given path '/listener/cancelProductOrderCreateEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "date": "2023-05-29T10:30:00Z",
          "customer": {
            "subscriberId": "123456789"
          }
        }
      }
      """
    When method POST
    Then status 400

  Scenario: Server error
    Given path '/listener/cancelProductOrderCreateEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "date": "2023-05-29T10:30:00Z",
          "customer": {
            "subscriberId": "123456789"
          },
          "order": {
            "id": "20230315000001",
            "correlationOrder": "ORD123",
            "associatedDocument": "VTT001"
          }
        }
      }
      """
    When method POST
    Then status 500

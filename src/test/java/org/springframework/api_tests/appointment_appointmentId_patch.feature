# ********RoostGPT********

# Test generated by RoostGPT for test vtal-api using AI Type Open AI and AI Model gpt-4o-2024-05-13
# 
# Feature file generated for /appointment/{appointmentId}_patch for http method type PATCH 
# RoostTestHash=33f5f2e325
# 
# 

# ********RoostGPT********
Feature: Test Appointment API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Patch Appointment with valid payload
    Given path 'appointment', '<appointmentId>'
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      { 
        "appointment": { 
          "slot": { "id": "<slotId>" }, 
          "reason": "<reason>" 
        } 
      }
      """
    When method PATCH
    Then status 200
    And match response.order ==
      """
      { 
        "type": "Instalacao", 
        "associatedDocument": "VTT001", 
        "addressChange": { "flag": true } 
      }
      """
    And match response.customer ==
      """
      { 
        "subscriberId": "VTAL001" 
      }
      """
    And match response.appointment ==
      """
      { 
        "id": "SA-562403", 
        "startDate": "2021-05-30T13:00:00", 
        "finishDate": "2021-05-30T18:00:00", 
        "priority": { "flag": true, "reason": "Cliente Diamond" } 
      }
      """
    And match response.address ==
      """
      { 
        "id": 17713 
      }
      """
    And match response.products.product[0].type == "Banda Larga"
    And match response.control ==
      """
      { 
        "type": "S", 
        "code": 201, 
        "message": "Created" 
      }
      """

    Examples:
      | read('appointment_appointmentId_patch.csv') |

  Scenario Outline: Patch Appointment with invalid payload
    Given path 'appointment', '<appointmentId>'
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      { 
        "appointment": { 
          "slot": { "id": "<slotId>" }, 
          "reason": "<reason>" 
        } 
      }
      """
    When method PATCH
    Then status 400
    And match response.control ==
      """
      { 
        "type": "E", 
        "code": 400, 
        "message": "Bad Request" 
      }
      """

    Examples:
      | appointmentId | slotId                               | reason                               |
      | SA-562403     |                                      | Agendamento para Instalação de Fibra |
      |               | bff13821-73c3-42cc-9327-b05c7df5a67f | Agendamento para Instalação de Fibra |

  Scenario Outline: Patch Appointment without authorization
    Given path 'appointment', '<appointmentId>'
    And request
      """
      { 
        "appointment": { 
          "slot": { "id": "<slotId>" }, 
          "reason": "<reason>" 
        } 
      }
      """
    When method PATCH
    Then status 401
    And match response.control ==
      """
      { 
        "type": "E", 
        "code": 401, 
        "message": "Unauthorized" 
      }
      """

    Examples:
      | appointmentId | slotId                               | reason                               |
      | SA-562403     | bff13821-73c3-42cc-9327-b05c7df5a67f | Agendamento para Instalação de Fibra |

  Scenario Outline: Patch Appointment with forbidden scope
    Given path 'appointment', '<appointmentId>'
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      { 
        "appointment": { 
          "slot": { "id": "<slotId>" }, 
          "reason": "<reason>" 
        } 
      }
      """
    When method PATCH
    Then status 403
    And match response.control ==
      """
      { 
        "type": "E", 
        "code": 403, 
        "message": "Forbidden - Scope Not Permitted" 
      }
      """

    Examples:
      | appointmentId | slotId                               | reason                               |
      | SA-562403     | bff13821-73c3-42cc-9327-b05c7df5a67f | Agendamento para Instalação de Fibra |

  Scenario Outline: Patch Appointment with not found slot
    Given path 'appointment', '<appointmentId>'
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      { 
        "appointment": { 
          "slot": { "id": "<slotId>" }, 
          "reason": "<reason>" 
        } 
      }
      """
    When method PATCH
    Then status 404
    And match response.control ==
      """
      { 
        "type": "E", 
        "code": 404, 
        "message": "Identificador do Slot não encontrado ou expirado" 
      }
      """

    Examples:
      | appointmentId | slotId          | reason                               |
      | SA-562403     | invalid-slot-id | Agendamento para Instalação de Fibra |

# ********RoostGPT********

# Test generated by RoostGPT for test vtal_api_flow using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# ROOST_METHOD_HASH=94cf0559d6
# ROOST_METHOD_SIG_HASH=04b6a89eb6
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Installation Order Processing',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Installation Order Creation Failure due to No Service Availability',
#     steps: 'Given the user has a valid geographic address\n' +
#       'When the user retrieves the address details using the Geographic Address Management API\n' +
#       'And the user retrieves the address complements using the Geographic Address Management API\n' +
#       'And the user checks the service availability for the address using the Resource Pool Management API\n' +
#       'And the service is not available for the address\n' +
#       'Then the installation order creation should fail\n' +
#       'And an appropriate error message should be provided indicating no service availability\n' +
#       '\n' +
#       '# High-level description of the expected behavior for each scenario:\n' +
#       '# \n' +
#       '# Successful Installation Order Creation:\n' +
#       '# \n' +
#       '# The user provides a valid geographic address.\n' +
#       '# The address details and complements are retrieved using the Geographic Address Management API.\n' +
#       '# The service availability is checked for the address using the Resource Pool Management API.\n' +
#       '# If the service is available, the user proceeds to search for available appointment slots using the Appointment API.\n' +
#       '# The user selects a suitable appointment slot and creates an appointment using the Appointment API.\n' +
#       '# The user places an installation order with the appointment details using the ProductOrdering API.\n' +
#       '# The installation order should be created successfully and associated with the selected appointment.\n' +
#       '# \n' +
#       '# \n' +
#       '# Installation Order Creation with Partial Service Availability:\n' +
#       '# \n' +
#       '# Similar to the successful scenario, but the service availability check indicates partial availability for the address.\n' +
#       '# The user proceeds with the appointment booking and order placement.\n' +
#       '# The installation order should be created successfully, associated with the selected appointment, and indicate partial service availability.\n' +
#       '# \n' +
#       '# \n' +
#       '# Installation Order Creation Failure due to No Service Availability:\n' +
#       '# \n' +
#       '# The user provides a valid geographic address.\n' +
#       '# The address details and complements are retrieved using the Geographic Address Management API.\n' +
#       '# The service availability is checked for the address using the Resource Pool Management API.\n' +
#       '# If the service is not available for the address, the installation order creation should fail.\n' +
#       '# An appropriate error message should be provided to the user indicating that the service is not available for the given address.\n' +
#       '# \n' +
#       '# \n' +
#       '# \n' +
#       '# These scenarios cover the main paths of the installation order creation process based on the provided API flow diagram, considering different service availability scenarios.',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Installation Order Processing

  Scenario: Installation Order Creation Failure due to No Service Availability
    Given a valid geographic address
    * def validAddress = "Rua do Lavradio Rio de Janeiro"
    * def validAddressId = 14393
    When the user retrieves the address details using the Geographic Address Management API
    * url urlBase
    And path '/geographicAddress'
    And param address = validAddress
    When method GET
    Then status 200
    And match response.addresses.address[0].id == validAddressId
    And the user retrieves the address complements using the Geographic Address Management API
    * url urlBase
    And path '/addressComplements', validAddressId
    When method GET
    Then status 200
    And match response.complementList != null
    And the user checks the service availability for the address
    * def mockServiceAvailabilityCheck = function(){ return { available: false } }
    * def serviceAvailability = callonce mockServiceAvailabilityCheck
    * match serviceAvailability.available == false
    Then the installation order creation should fail
    * url urlBase
    And path '/productOrder'
    And request
      """
      {
        "order": {
          "addresses": {
            "address": {
              "id": #(validAddressId)
            }
          },
          "appointment": {
            "date": "2023-06-15T10:00:00",
            "hasSlot": true,
            "mandatoryType": "Obrigatorio"
          },
          "associatedDocument": "VTT001",
          "associatedDocumentDate": "2023-06-14T14:00:00",
          "correlationOrder": "10",
          "customer": {
            "subscriberId": "SVTAL001"
          },
          "infraType": "FTTH",
          "type": "Instalacao"
        }
      }
      """
    When method POST
    Then status 406
    And match response.control.code == '406'
    And match response.control.message contains 'Not Acceptable'
    And match response.control.type == 'E'

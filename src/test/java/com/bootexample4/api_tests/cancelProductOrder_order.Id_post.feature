# ********RoostGPT********

# Test generated by RoostGPT for test apiFulfillment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * configure headers = { 'Authorization': '#(authToken)' }

  Scenario Outline: Cancel Product Order By Id - Successful
    Given path '/cancelProductOrder/<order.Id>'
    And request
      """
      {
        "order": {
          "associatedDocument": "<associatedDocument>",
          "customer": {
            "subscriberId": "<subscriberId>"
          }
        }
      }
      """
    When method POST
    Then status 200
    And match response ==
      """
      {
        "control": {
          "code": "200",
          "message": "OK",
          "type": "S"
        }
      }
      """

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario: Cancel Product Order By Id - Bad Request
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 400
    And match response ==
      """
      {
        "control": {
          "code": "400",
          "message": "Bad Request",
          "type": "E"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Unauthorized
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 401
    And match response ==
      """
      {
        "control": {
          "code": "401",
          "message": "Unauthorized",
          "type": "E"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Forbidden
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 403
    And match response contains any of
      """
      [
        {
          "control": {
            "code": "403",
            "message": "Forbidden - Scope Not Permitted",
            "type": "E"
          }
        },
        {
          "control": {
            "code": "403",
            "message": "Aplicação não autorizada ou não informada!",
            "type": "E"
          }
        }
      ]
      """

  Scenario: Cancel Product Order By Id - Not Found
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 404
    And match response ==
      """
      {
        "control": {
          "code": "404",
          "message": "Not Found",
          "type": "E"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Not Acceptable
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 406
    And match response contains any of
      """
      [
        {
          "control": {
            "code": "406",
            "message": "Not Acceptable (AssociatedDocument já existente/utilizado)",
            "type": "E"
          }
        },
        {
          "control": {
            "code": "406",
            "message": "Not Acceptable (Tipo de infraestrutura [infraType] informado diferente do contratado/permitido para o endereço informado)",
            "type": "E"
          }
        },
        {
          "control": {
            "code": "406",
            "message": "Not Acceptable (Identificador da instalação [subscriberId] já existente/instalado))",
            "type": "E"
          }
        },
        {
          "control": {
            "code": "406",
            "message": "Not Acceptable (Identificador da instalação [subscriberId] em aprovisionamento)",
            "type": "E"
          }
        },
        {
          "control": {
            "code": "406",
            "message": "Not Acceptable (Identificador da instalação [subscriberId] inativo ou inexistente)",
            "type": "E"
          }
        }
      ]
      """

  Scenario: Cancel Product Order By Id - Locked
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 423
    And match response ==
      """
      {
        "control": {
          "code": "423",
          "message": "Agendamento não pode ser alterado",
          "type": "E"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Too Many Requests
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 429
    And match response ==
      """
      {
        "control": {
          "code": "429",
          "message": "Too Many Requests - Exceeded Quota",
          "type": "E"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Internal Server Error
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 500
    And match response ==
      """
      {
        "control": {
          "code": "500",
          "message": "Internal Server Error",
          "type": "T"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Service Unavailable
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 503
    And match response ==
      """
      {
        "control": {
          "code": "503",
          "message": "Service Unavailable",
          "type": "T"
        }
      }
      """

  Scenario: Cancel Product Order By Id - Gateway Timeout
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 504
    And match response ==
      """
      {
        "control": {
          "code": "504",
          "message": "Gateway Timeout",
          "type": "T"
        }
      }
      """

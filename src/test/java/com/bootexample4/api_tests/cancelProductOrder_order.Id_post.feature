# ********RoostGPT********

# Test generated by RoostGPT for test apiFulfillment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']

  Scenario Outline: Cancel a product order successfully
    Given path '/cancelProductOrder/<orderId>'
    And header Authorization = AUTH_TOKEN
    And request
      """
      {
        "order": {
          "associatedDocument": "<associatedDocument>",
          "customer": {
            "subscriberId": "<subscriberId>"
          }
        }
      }
      """
    When method put
    Then status 200
    And match response ==
      """
      {
        "control": {
          "code": "200",
          "message": "OK",
          "type": "S"
        }
      }
      """

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario Outline: Cancel a product order with invalid or missing data
    Given path '/cancelProductOrder/<orderId>'
    And header Authorization = AUTH_TOKEN
    And request
      """
      {
        "order": {
          "associatedDocument": "<associatedDocument>",
          "customer": {
            "subscriberId": "<subscriberId>"
          }
        }
      }
      """
    When method put
    Then status 400
    And match response ==
      """
      {
        "control": {
          "code": "400",
          "message": "Bad Request",
          "type": "E"
        }
      }
      """

    Examples:
      | orderId        | associatedDocument | subscriberId |
      | 20230315000001 |                    | SVTAL001     |
      | 20230315000001 | VTT001             |              |

  Scenario: Cancel a product order with unauthorized credentials
    Given path '/cancelProductOrder/20230315000001'
    And header Authorization = 'InvalidToken'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method put
    Then status 401
    And match response ==
      """
      {
        "control": {
          "code": "401",
          "message": "Unauthorized",
          "type": "E"
        }
      }
      """

  Scenario: Cancel a non-existent product order
    Given path '/cancelProductOrder/99999999999999'
    And header Authorization = AUTH_TOKEN
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method put
    Then status 404
    And match response ==
      """
      {
        "control": {
          "code": "404",
          "message": "Not Found",
          "type": "E"
        }
      }
      """

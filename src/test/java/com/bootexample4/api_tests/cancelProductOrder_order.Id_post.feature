# ********RoostGPT********

# Test generated by RoostGPT for test apiFulfillment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Successfully cancel a product order by ID
    Given path '/cancelProductOrder/20230315000001'
    And header Authorization = authToken
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 200
    And match response ==
      """
      {
        "control": {
          "code": "200",
          "message": "OK",
          "type": "S"
        }
      }
      """

  Scenario: Attempt to cancel a product order with invalid ID
    Given path '/cancelProductOrder/invalidOrderId'
    And header Authorization = authToken
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 404
    And match response ==
      """
      {
        "control": {
          "code": "404",
          "message": "Not Found",
          "type": "E"
        }
      }
      """

  Scenario: Attempt to cancel a product order without authorization
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 401
    And match response ==
      """
      {
        "control": {
          "code": "401",
          "message": "Unauthorized",
          "type": "E"
        }
      }
      """

  Scenario: Attempt to cancel a product order with invalid authorization
    Given path '/cancelProductOrder/20230315000001'
    And header Authorization = 'invalidToken'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001",
          "customer": {
            "subscriberId": "SVTAL001"
          }
        }
      }
      """
    When method POST
    Then status 403
    And match response ==
      """
      {
        "control": {
          "code": "403",
          "message": "#string",
          "type": "E"
        }
      }
      """

  Scenario: Attempt to cancel a product order with invalid request body
    Given path '/cancelProductOrder/20230315000001'
    And header Authorization = authToken
    And request
      """
      {
        "invalidField": "invalidValue"
      }
      """
    When method POST
    Then status 400
    And match response ==
      """
      {
        "control": {
          "code": "400",
          "message": "Bad Request",
          "type": "E"
        }
      }
      """

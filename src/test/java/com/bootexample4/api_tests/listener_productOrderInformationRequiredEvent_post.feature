# ********RoostGPT********

# Test generated by RoostGPT for test apiFulfillment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /listener/productOrderInformationRequiredEvent_post for http method type POST 
# RoostTestHash=ce4c08f30f
# 
# 

# ********RoostGPT********
Feature: Product Order Information Required Event API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Notification client pendency
    Given path '/listener/productOrderInformationRequiredEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001",
            "issue": {
              "action": "abrir",
              "code": "7029",
              "description": "Pendencia de agendamento",
              "fieldActivity": "true",
              "observation": "",
              "reason": "PROJETO",
              "task": "",
              "type": "CLIENTE",
              "updateDate": "2021-02-17T17:19:50-03:00"
            }
          }
        }
      }
      """
    When method post
    Then status 204
    And match responseHeaders['Content-Type'] contains 'application/json'

    Examples:
      | read('listener_productOrderInformationRequiredEvent_post.csv') |

  Scenario Outline: Notification technical pendency
    Given path '/listener/productOrderInformationRequiredEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001",
            "issue": {
              "action": "abrir",
              "code": "7030",
              "description": "Pendencia de agendamento",
              "fieldActivity": "false",
              "observation": "",
              "reason": "MANUNTENÃÃO",
              "task": "",
              "type": "TECNICA",
              "updateDate": "2022-02-25T11:50:50.566-03:00"
            }
          }
        }
      }
      """
    When method post
    Then status 204
    And match responseHeaders['Content-Type'] contains 'application/json'

    Examples:
      | read('listener_productOrderInformationRequiredEvent_post.csv') |

  Scenario: Missing authorization token
    Given path '/listener/productOrderInformationRequiredEvent'
    And request
      """
      {
        "notification": {
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001",
            "issue": {
              "action": "abrir",
              "code": "7029",
              "description": "Pendencia de agendamento",
              "fieldActivity": "true",
              "observation": "",
              "reason": "PROJETO",
              "task": "",
              "type": "CLIENTE",
              "updateDate": "2021-02-17T17:19:50-03:00"
            }
          }
        }
      }
      """
    When method post
    Then status 401

  Scenario: Invalid request payload
    Given path '/listener/productOrderInformationRequiredEvent'
    And header Authorization = authToken
    And request
      """
      {
        "invalid": "payload"
      }
      """
    When method post
    Then status 400
    And match response contains 'BadRequest'

  Scenario: Server error
    Given path '/listener/productOrderInformationRequiredEvent'
    And header Authorization = authToken
    And request
      """
      {
        "notification": {
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001",
            "issue": {
              "action": "abrir",
              "code": "7029",
              "description": "Pendencia de agendamento",
              "fieldActivity": "true",
              "observation": "",
              "reason": "PROJETO",
              "task": "",
              "type": "CLIENTE",
              "updateDate": "2021-02-17T17:19:50-03:00"
            }
          }
        }
      }
      """
    When method post
    Then status 500
    And match response contains 'ServerError'
